[
  {
    "objectID": "Data Processing.html",
    "href": "Data Processing.html",
    "title": "Data Processing",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidycensus)\n\n\nurl_census &lt;- 'api.census.gov/data/2022/acs/acs1/pums?get=SEX,PWGTP,MAR&SCHL=24'\ncensus_info &lt;- httr::GET(url_census)\nstr(census_info, max.level = 1)\n\nList of 10\n $ url        : chr \"https://api.census.gov/data/2022/acs/acs1/pums?get=SEX,PWGTP,MAR&SCHL=24\"\n $ status_code: int 200\n $ headers    :List of 12\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 2\n $ cookies    :'data.frame':    1 obs. of  7 variables:\n $ content    : raw [1:937508] 5b 5b 22 53 ...\n $ date       : POSIXct[1:1], format: \"2025-09-25 01:46:35\"\n $ times      : Named num [1:6] 0.1084 0.0578 0.1019 0.1543 0.38 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\"\n\n\n\nlibrary(jsonlite)\n\n\nAttaching package: 'jsonlite'\n\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\nlibrary(httr)\nparsing_fun &lt;- function(response) {\n  parsed &lt;- fromJSON(rawToChar(census_info$content))\n  content_info &lt;- as_tibble(parsed)\n  colnames(content_info) &lt;- content_info[1,]\n  content_info &lt;- content_info[-1,]\n  content_info\n}\n\n\nnumeric_vars &lt;- c('AGEP','GASP','GRPIP','JWAP', 'JWDP','JWMNP')\ncategory_vars &lt;- c('FER','HHL','HISPEED', 'JWTRNS','SCH','SCHL','SEX')\ngeo_vars &lt;- c('All', 'Region', 'Division', 'State')\nvariable_combo &lt;- paste(c(numeric_vars, category_vars), collapse = ',')\nuser_input &lt;- function(x=2022,\n                       y=c(\"AGEP\"),\n                       z=c(\"SEX\"),\n                       geo_lvl=\"All\",\n                       specs=NULL) {\n  if (!all(x %in% c(2010:2022))) {\n    stop('expected a number')\n  }\n  if (!all(y %in% numeric_vars)) {\n    stop('expected a numeric variable from the following list: AGEP, GASP, GRPIP, JWAP, JWDP, JWMNP')\n  }\n  if (!'PWGTP' %in% numeric_vars) {\n    numeric_vars &lt;- c(numeric_vars, 'PWGTP')\n  }\n  if (!all(z %in% category_vars)) {\n    stop('expected a categorical variable from the following list: FER, HHL, HISPEED, JWTRNS, SCH, SCHL, SEX')\n  }\n  if (!geo_lvl %in% geo_vars){\n    stop('expected a geographical level from the following list: All, Region, Division, State')\n  }\n  url_base &lt;- paste0('https://api.census.gov/data/', x, '/acs/acs1/pums?get=', variable_combo)\n  \n  if (!is.null(specs)) {\n    filter &lt;- paste0('&', names(specs), '=', specs)\n    url_base &lt;- paste0(url_base, paste(filter, collapse = ''))\n  }\n  response &lt;- GET(url_base)\n  \n  output_tibble &lt;- parsing_fun(response)\n  \n  for (i in numeric_vars) {\n    if (i %in% names(output_tibble)) {\n      output_tibble[[i]] &lt;- as.numeric(output_tibble[[i]])\n    }\n  }\n  \n  time_vars &lt;- intersect(numeric_vars, c('JWAP','JWDP'))\n  \n  for (i in time_vars) {\n    if (i %in% names(output_tibble)) {\n      output_tibble[[i]] &lt;- as.numeric(output_tibble[[i]])+0.5 #halfway point\n    }\n  }\n  \n  for (i in category_vars) {\n    if (i %in% names(output_tibble)) {\n      output_tibble[[i]] &lt;- as.factor(output_tibble[[i]])\n    }\n  }\n  \n  output_tibble$Year &lt;- x\n  \n  return(output_tibble)  \n}\n\n\ndefault_tibble &lt;- user_input()\n\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\n\ndefault_tibble\n\n# A tibble: 44,079 × 5\n   SEX   PWGTP MAR   SCHL   Year\n   &lt;fct&gt; &lt;dbl&gt; &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt;\n 1 2         6 5     24     2022\n 2 2        23 2     24     2022\n 3 1        23 3     24     2022\n 4 1        80 5     24     2022\n 5 1        16 1     24     2022\n 6 1       107 3     24     2022\n 7 2        10 5     24     2022\n 8 1        22 1     24     2022\n 9 2       127 5     24     2022\n10 2        46 5     24     2022\n# ℹ 44,069 more rows"
  }
]